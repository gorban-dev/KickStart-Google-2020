Firstly, denote Ki as the number of times a person will use the ATM. Formally, Ki = ⌈Ai / X⌉.

Test Set 1
We can directly simulate the process using a queue.

Assume that i-th person, that wants to withdraw Ai, is first in the queue. There are two possibilites:

Ai ≤ X. In that case, this person withdraws Ai and leaves the queue. We can add i to the answer.
Ai > X. In that case, this person withdraws X (thus setting Ai to Ai - X) and goes back to the end of the queue.
Time complexity of this simulation is O(Σ Ki).

In the worst case, when X = 1, Ki = Ai. Since Ai ≤ 100, the worst time complexity is O(N × 100), which easily fits into the time limit.

Test Set 2
In the second test set, Ki can be as big as 109, so direct simulation is too slow.

Let's look at two people i and j. When will i-th person leave the queue before j-th person? There are two cases:

Ki < Kj. Since i-th person will use the ATM fewer times than j-th person, they will leave the queue earlier.
Ki = Kj and i < j. If they both use the ATM the same amount of times, the person earlier in the queue in the initial configuration will leave first.
This observation is enough to form a full solution. Sort people first in ascending order of Ki, and in case of ties in ascending order of their number. After sorting, this is our answer.

Time complexity of this solution is O(N log N).